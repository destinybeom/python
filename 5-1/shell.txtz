#i
#!/bin/bash

# date
sudo date

# check machine on cron by 1hour
if [ `sudo cat /etc/cron.d/cron | grep check_machine | wc -l` == "0" ]; then sudo echo "*/1 * * * * root bash -l /root/check_machine.sh > /var/www/html/check" >> /etc/cron.d/cron; fi

#Node status for IPMI(SES)
##SSD and Backplane
if [ `sudo dpkg --get-selections | grep sg3-utils | wc -l` == "0" ]; then echo "You should install sg3-utils to check ssd and backplane error count"; fi
SSD=`sudo sg_map -i | grep HFS | awk '{print $2}' | xargs`; for D in $SSD; do ERRSSD=`sudo sg_logs -p 0x18 $D | grep DWORD | grep count | awk '{print $5}' | xargs`; for i in $ERRSSD; do if [ $i != "0" ]; then echo "ISSUE : Invalid DWORD count exist - Error Count on the "$D" disk side is "$i; fi; done; done;
SSD=`sudo sg_map -i | grep HFS | awk '{print $2}' | xargs`; for D in $SSD; do ERRSSD=`sudo sg_logs -p 0x18 $D | grep disparity | grep count | awk '{print $6}' | xargs`; for i in $ERRSSD; do if [ $i != "0" ]; then echo "ISSUE : Running disparity error on the disk count exist - Error Count on the "$D" disk side is "$i; fi; done; done;
SSD=`sudo sg_map -i | grep HFS | awk '{print $2}' | xargs`; for D in $SSD; do ERRSSD=`sudo sg_logs -p 0x18 $D | grep Loss | grep DWORD | awk '{print $6}' | xargs`; for i in $ERRSSD; do if [ $i != "0" ]; then echo "ISSUE : Loss of DWORD synchronization count exist - Error Count on the "$D" disk side is "$i; fi; done; done;
SSD=`sudo sg_map -i | grep HFS | awk '{print $2}' | xargs`; for D in $SSD; do ERRSSD=`sudo sg_logs -p 0x18 $D | grep reset | grep problem | awk '{print $5}' | xargs`; for i in $ERRSSD; do if [ $i != "0" ]; then echo "ISSUE : Phy reset problem exist - Problem Count on the "$D" disk side is "$i; fi; done; done;

echo "-----------------------------------------------------------"

##Expander and power status and temperature sensor
HAEXP=`sudo sg_map -i | grep HA201 | grep Expander | awk '{print $1}'`; if [ `sudo sg_ses --page=2 $HAEXP | grep failure=0 | grep Disabled=0 | grep OK | wc -l` == "38" ] ; then echo "OK : Power supply and Cooling element is normal"; else echo "ISSUE : Power supply or Cooling element is abnormal"; fi;
HAEXP=`sudo sg_map -i | grep HA201 | grep Expander | awk '{print $1}'`; if [ `sudo sg_ses --page=2 $HAEXP | grep Critical | wc -l` -gt "0" ] ; then echo "ISSUE : Power supply or Cooling element have Critical"; fi;
HAEXP=`sudo sg_map -i | grep HA201 | grep Expander | awk '{print $1}'`; SESPOWER=`sudo sg_ses -r --page=0x4 $HAEXP | awk '{print $14 $15}' | xargs | awk '{print $2}'`; if [ "$SESPOWER" != "0101" ]; then echo "ISSUE : The connection between Bridge MCU and Bridge Expander is abnormal"; else echo "OK : The connection between Bridge MCU and Bridge Expander is normal"; fi
HAEXP=`sudo sg_map -i | grep HA201 | grep Expander | awk '{print $1}'`; SESPOWER=`sudo sg_ses -r --page=0x4 $HAEXP | awk '{print $13 $14}' | xargs | awk '{print $3}'`; if [ "$SESPOWER" != "0303" ]; then echo "ISSUE : 1 node machine is down at least"; else echo "OK : The other node check status is normal"; fi
if [ `sudo dpkg --get-selections | grep smp-utils | wc -l` == "0" ]; then echo "You should install smp-utils to check expander error count"; fi
EXPNAME=`sudo ls /dev/bsg/expander-*`; for SLOTNUMBER in {0,1,2,3,4,5,6,7,8,9,10,11,24,25,26,27,28,29,30,31,32,33,34,35}; do if [ `sudo smp_rep_phy_err_log -p $SLOTNUMBER $EXPNAME | grep error | grep count | awk '{print $5}'` != "0" ]; then echo "ISSUE : SAS Expender error count is not zero - Slot Phy Number "$SLOTNUMBER; fi; done;

#SSD status
if [ `sudo sg_map -i | grep HFS | wc -l` == "24" ]; then echo "OK : Equipped SSD count is 24ea"; else echo "ISSUE : Equipped SSD count is not 24ea"; fi

#FC connection, FC speed
if [ `sudo cat /sys/class/scsi_host/host*/device/fc_host/host*/port_name | wc -l` == "4" ]; then echo "OK : FC port equipment is OK"; else echo "ISSUE : FC port equipment is Fault"; fi;
if [ `cat /sys/class/fc_host/host*/port_state | grep Online | wc -l` == "0" ]; then echo "ISSUE : FC port connection is zero"; else echo "OK : One or more FC port connected"; fi;

# NTB Ping
sudo ping -c 1 -w 1 169.254.8.1 &> /dev/null; if [ "$?" == "0" ]; then echo "OK : NTB Connection Ping of Node1 is normal"; else echo "ISSUE : NTB connection Ping of node1 is Error"; fi
sudo ping -c 1 -w 1 169.254.8.2 &> /dev/null; if [ "$?" == "0" ]; then echo "OK : NTB Connection Ping of Node2 is normal"; else echo "ISSUE : NTB connection Ping of node2 is Error"; fi

# Heat-beat Check (eth0, NTB)
if [ `sudo ifconfig eth0 | grep "inet addr" | awk '{print $2}'` != "" ]; then echo "OK : IP is OK"; else echo "ISSUE : No IP"; fi
if [ `sudo ifconfig eth0 | grep "inet addr" | awk '{print $3}'` != "" ]; then echo "OK : Subnet-Mask is OK"; else echo "ISSUE : No Subnet-Mask"; fi

# mdstat status
if [ `sudo cat /proc/mdstat | grep UU | awk '{print $6}' | wc -l` -gt "2" ]; then echo "OK : mdstat count is normal"; else echo "ISSUE : mdstat count is Error"; fi

#Flexvisor status
if [ `flexvisor status | grep running | awk '{print $6}' | wc -l` == "6" ]; then echo "OK : Flexvisor status is OK"; else echo "ISSUE : Flexvisor status is Fault"; fi

#Federator status
if [ `federator status | grep running | awk '{print $6}' | wc -l` == "1" ]; then echo "OK : Federator status is OK"; else echo "ISSUE : Federator status is Fault"; fi

#Pace Maker status
if [ `service pacemaker status | grep running | awk '{print $6}' | wc -l` == "1" ]; then echo "OK : Pace Maker status is OK"; else echo "ISSUE : Pace Maker status is Fault"; fi

#CoroSync status
if [ `service corosync status | grep running | awk '{print $6}' | wc -l` == "1" ]; then echo "OK : CoroSync status is OK"; else echo "ISSUE : CoroSync status is Fault"; fi

#ZFS List
if [ `sudo zfs list | wc -l` -gt "1" ]; then echo "OK : ZFS status is OK"; else echo "ISSUE : ZFS status is Fault"; fi
if [ `sudo zpool list | wc -l` -gt "1" ]; then echo "OK : zpool list status is OK"; else echo "ISSUE : zpool list status is Fault"; fi
if [ `sudo zpool status | egrep '(DEGRADED|OFFLINE|UNAVAIL)' | wc -l` == "0" ]; then echo "OK : zpool status - ALL Resource is ONLINE"; else echo "ISSUE : zpool status - One or more Resource is DEGRADED or OFFLINE or UNAVAIL"; fi

#aoe status
if [ `sudo lsblk | grep "dm-" | wc -l` -gt "1" ]; then echo "OK : NVRAM Device mapping via NTB is OK"; else echo "ISSUE : NVRAM Device mapping via NTB is Fault"; fi
if [ `sudo aoe-stat | grep up | wc -l` -gt "0" ]; then echo "OK : aoe state is OK"; else echo "ISSUE : aoe state is Fault"; fi

#NVRAM status
if [ `sudo zpool status | grep logs | wc -l` -gt "0" ]; then echo "OK : zpool status - log device equipment is OK"; else echo "ISSUE : zpool status - log device equipment is Fault"; fi 
echo "-----------------------------------------------------------"
sudo lsblk | egrep '(ev3|md|dm-|etherd)'
echo "-----------------------------------------------------------"
echo "INFO : check ev3util /dev/ev3mema --> type card_ready"
echo ""




#Health Check List

#-Heat-beat  : 상대편 node check 가능
#	eth0
#	NTB

#-Mirror Device
#	/proc/mdstat
#	AoE

#-FC
#	Link speed status

#-Flexvisor
#	flexvisor status

#-Federator
#	federator status

#-Pace Maker
#	service pacemaker status

#-CoroSync
#	service corosync status

#-SSD
#	lsblk -d

#-zfs list

#-service ip / gateway

#-NVRAM
#	ev3util /dev/ev3mema   --> card_ready 메시지 확인

